using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.Linq;
using System.Security.Policy;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Project_Main.Class_Operations;
using Project_Main.Interface_Operations ;
using static System.Net.Mime.MediaTypeNames;

namespace Project_Main
{
    public partial class Form_Calculator : Form
    {
        string Operator;
        double FirstNumber = 0, SecondNumber = 0;

        Dictionary<string, Interface_BasicOperations> oOperations
          = new Dictionary<string, Interface_BasicOperations>
          {
                {"S", new Class_OperationAdition()},
                {"R", new Class_OperationSubtraction()},
                {"M", new Class_OperationMultiplication()},
                {"D", new Class_OperationDivision()},
                {"Rz", new Class_OperationSquareRoot()},
                {"Exp2", new Class_RaizerExponent()},
                {"Expx", new Class_RaizerExponent()}
          };

        public Form_Calculator()
        {
            InitializeComponent();

            this.Paint += TextBox_OperationsAddBorderColor;
            TextBox_Operations.BorderStyle = BorderStyle.None;
            
        }

        /*To color the border of the text box (TextBox_Operation)*/
        private void TextBox_OperationsAddBorderColor(object sender, PaintEventArgs e)
        {
            Color oColor = Color.CornflowerBlue;
            Pen oPen = new Pen(oColor);

            int x = TextBox_Operations.Left - 1;
            int y = TextBox_Operations.Top - 1;
            int width = TextBox_Operations.Width + 1;
            int height = TextBox_Operations.Height + 1;

            e.Graphics.DrawRectangle(oPen,
                new Rectangle(x, y, width, height));
        }

        /*To prevent letters, numbers or other characters from being entered*/
        private void TextBox_Operations_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (char.IsLetter(e.KeyChar) || char.IsSeparator(e.KeyChar)
                || char.IsSymbol(e.KeyChar) || char.IsPunctuation(e.KeyChar)
                || char.IsNumber(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        /*To calculate the sum*/
        private void Button_S_Click(object sender, EventArgs e)
        {
            if (double.TryParse(TextBox_Operations.Text, out _))
            {
                FirstNumber = double.Parse(TextBox_Operations.Text);
            }
          
           
            Operator = Button_S.Text;
            TextBox_Operations.Text = "";
        }

        /*To calculate the subtraction*/
        private void Button_R_Click(object sender, EventArgs e)
        {
            if (double.TryParse(TextBox_Operations.Text, out _))
            {
                FirstNumber = double.Parse(TextBox_Operations.Text);
            }
              
            Operator = Button_R.Text;
            TextBox_Operations.Text = "";
        }

        /*To calculate the multiplication*/
        private void Button_M_Click(object sender, EventArgs e)
        {
            if (double.TryParse(TextBox_Operations.Text, out _))
            {
                FirstNumber = double.Parse(TextBox_Operations.Text);
            }
                 
            Operator = Button_M.Text ;
            TextBox_Operations.Text = "";
        }

        /*To calculate the division*/
        private void Button_D_Click(object sender, EventArgs e)
        {
            if (double.TryParse(TextBox_Operations.Text, out _))
            {
                FirstNumber = double.Parse(TextBox_Operations.Text);
            }
                
            Operator = Button_D.Text;
            TextBox_Operations.Text = "";
        }

        /*Add the number 1 to the text box*/
        private void Button_1_Click(object sender, EventArgs e)
        {      
             TextBox_Operations.Text += "1";             
        }

        /*Add the number 2 to the text box*/
        private void Button_2_Click(object sender, EventArgs e)
        {       
             TextBox_Operations.Text += "2";          
        }

        /*Add the number 3 to the text box*/
        private void Button_3_Click(object sender, EventArgs e)
        {     
             TextBox_Operations.Text += "3";        
        }

        /*Add the number 4 to the text box*/
        private void Button_4_Click(object sender, EventArgs e)
        {        
             TextBox_Operations.Text += "4";     
        }

        /*Add the number 5 to the text box*/
        private void Button_5_Click(object sender, EventArgs e)
        {      
             TextBox_Operations.Text += "5";     
        }

        /*Add the number 6 to the text box*/
        private void Button_6_Click(object sender, EventArgs e)
        {      
             TextBox_Operations.Text += "6";           
        }

        /*Add the number 7 to the text box*/
        private void Button_7_Click(object sender, EventArgs e)
        {      
             TextBox_Operations.Text += "7";         
        }

        /*Add the number 8 to the text box*/
        private void Button_8_Click(object sender, EventArgs e)
        {      
              TextBox_Operations.Text += "8";        
        }

        /*Add the number 9 to the text box*/
        private void Button_9_Click(object sender, EventArgs e)
        {    
              TextBox_Operations.Text += "9";       
        }

        /*Add the number 0 to the text box*/
        private void Button_0_Click(object sender, EventArgs e)
        {    
              TextBox_Operations.Text += "0";            
        }

        /*To delete all text from the text box(TextBox_Operation)*/
        private void Button_AC_Click(object sender, EventArgs e)
        {
            TextBox_Operations.Text = "" ;
        }

        /*To delete the text from the text box one by one(TextBox_Operation)*/
        private void Button_DEL_Click(object sender, EventArgs e)
        {
            
            if (TextBox_Operations.Text.Length > 0)
            {
                TextBox_Operations.Text =
                    TextBox_Operations.Text.Substring(0, TextBox_Operations.Text.Length - 1);
            }

        }

        /*To calculate the square root of a number*/
        private void Button_Rz_Click(object sender, EventArgs e)
        {
         
            Operator = Button_Rz.Text ;
            if (double.TryParse(TextBox_Operations.Text, out _))
            {
                FirstNumber = double.Parse(TextBox_Operations.Text);

                if (oOperations.ContainsKey(Operator))
                {
                    Interface_BasicOperations ResultOperation = oOperations[Operator];
                    TextBox_Operations.Text = ResultOperation.Operations(FirstNumber, 0).ToString();
                }

            }
        
        }

        /*To square a number*/
        private void Button_Exp2_Click(object sender, EventArgs e)
        {
          
            Operator = Button_Exp2.Text;
            if (double.TryParse(TextBox_Operations.Text, out _))
            {
                FirstNumber = double.Parse(TextBox_Operations.Text);

                if (oOperations.ContainsKey(Operator))
                {
                    Interface_BasicOperations ResultOperation = oOperations[Operator];
                    TextBox_Operations.Text = ResultOperation.Operations(FirstNumber, 0).ToString();
                }

            }
          
        }

        /*To raise a number to any power*/
        private void Button_Expx_Click(object sender, EventArgs e)
        {
           
            if (double.TryParse(TextBox_Operations.Text, out _))
            {
                Operator = Button_Expx.Text ;
                FirstNumber = double.Parse(TextBox_Operations.Text);
                TextBox_Operations.Text = "";
            }
    
        }

        /*To execute all operations*/
        private void Button_E_Click(object sender, EventArgs e)
        {
           
            if (double.TryParse(TextBox_Operations.Text, out _))
            {
                SecondNumber = double.Parse(TextBox_Operations.Text);

                /*Performs the elevation of number to any power*/
                if (oOperations.ContainsKey(Operator))
                {              
                    Interface_BasicOperations ResultOperation = oOperations[Operator];
                    TextBox_Operations.Text = ResultOperation.Operations(FirstNumber, SecondNumber).ToString();
                }

                /*Performs basic operations addition, subtraction, multiplication and division*/
                if (!oOperations.ContainsKey("Rz") 
                    && !oOperations.ContainsKey("Exp2") 
                    && !oOperations.ContainsKey("Expx"))
                {
                    
                    Interface_BasicOperations ResultOperation = oOperations[Operator];
                    TextBox_Operations.Text = ResultOperation.Operations(FirstNumber, SecondNumber).ToString();
                }

            }      

        }

        /*to prevent 0 from being entered at the beginning of the text box*/

        /*Note: this event and the conditions within it are important as they allow
          all of the aforementioned operations to be performed.
          Do not delete*/
        private void TextBox_Operations_TextChanged(object sender, EventArgs e)
        {
    
            if (TextBox_Operations.Text.StartsWith("0") && TextBox_Operations.Text.Length > 1)
            { 
                TextBox_Operations.Text = TextBox_Operations.Text.Substring(1);
            }
        }

    }
}